name: C++ CI

on:
  push:
    paths:
      - src/**
      - xmake.lua
      - .github/workflows/build.yml
    branches: ["🍀"]
  pull_request:
    paths:
      - src/**
      - xmake.lua
      - .github/workflows/build.yml
    branches: ["🍀"]

jobs:
  build:
    strategy:
      matrix:
        mode: [debug, release]
        cfg:
          - os: ubuntu-latest
            toolchain: gcc
            arch: x86_64
          - os: ubuntu-latest
            toolchain: clang
            arch: x86_64
          - os: macos-latest
            toolchain: clang
            arch: arm64
          - os: windows-latest
            toolchain: msvc
            arch: x86
          - os: windows-latest
            toolchain: msvc
            arch: x64
      fail-fast: false
    runs-on: ${{ matrix.cfg.os }}

    steps:
      - uses: actions/checkout@v4
      - name: Set xmake env
        run: echo "XMAKE_GLOBALDIR=${{ runner.tool_cache }}/xmake-global" >> "$GITHUB_ENV"
        shell: bash
      - uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: latest
          actions-cache-folder: .xmake-cache
      - name: Cache XMake packages
        id: cache-xmake
        uses: actions/cache@v4
        with:
          path: ${{ env.XMAKE_GLOBALDIR }}/.xmake/packages
          key: xmake-packages-${{ runner.os }}-${{ matrix.cfg.toolchain }}-${{ matrix.cfg.arch }}-${{ hashFiles('xmake.lua') }}
          restore-keys: |
            xmake-packages-${{ runner.os }}-${{ matrix.cfg.toolchain }}-${{ matrix.cfg.arch }}-${{ hashFiles('xmake.lua') }}
            xmake-packages-${{ runner.os }}-${{ matrix.cfg.toolchain }}-${{ matrix.cfg.arch }}-
      - name: Setup ${{ matrix.cfg.toolchain }} ${{ matrix.cfg.arch }}
        run: xmake f -y --policies=package.install_only --toolchain=${{ matrix.cfg.toolchain }} --arch=${{ matrix.cfg.arch }} --mode=${{ matrix.mode }}
      - name: Build
        run: xmake -vy
      - name: Install to temp
        run: xmake install -o ${{ runner.temp }}
      - uses: actions/upload-artifact@v4
        with:
          name: nanokv-${{ runner.os }}-${{ matrix.cfg.toolchain }}-${{ matrix.cfg.arch }}-${{ matrix.mode }}
          path: ${{ runner.temp }}/bin
